// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Citus.Education.WebApp.Sample.Web.Controllers
{
    public partial class AdminController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AdminController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AdminController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetCvCompetenceListAjax()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCvCompetenceListAjax);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CvCompetenceEdit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CvCompetenceEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CvCompetenceView()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CvCompetenceView);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AdminController Actions { get { return MVC.Admin; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Admin";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string CvCompetenceList = "CvCompetenceList";
            public readonly string CvCompetenceListAjax = "CvCompetenceListAjax";
            public readonly string GetCvCompetenceListAjax = "GetCvCompetenceListAjax";
            public readonly string CvCompetenceEdit = "CvCompetenceEdit";
            public readonly string CvCompetenceView = "CvCompetenceView";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string CvCompetenceList = "CvCompetenceList";
            public const string CvCompetenceListAjax = "CvCompetenceListAjax";
            public const string GetCvCompetenceListAjax = "GetCvCompetenceListAjax";
            public const string CvCompetenceEdit = "CvCompetenceEdit";
            public const string CvCompetenceView = "CvCompetenceView";
        }


        static readonly ActionParamsClass_GetCvCompetenceListAjax s_params_GetCvCompetenceListAjax = new ActionParamsClass_GetCvCompetenceListAjax();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCvCompetenceListAjax GetCvCompetenceListAjaxParams { get { return s_params_GetCvCompetenceListAjax; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCvCompetenceListAjax
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_CvCompetenceEdit s_params_CvCompetenceEdit = new ActionParamsClass_CvCompetenceEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CvCompetenceEdit CvCompetenceEditParams { get { return s_params_CvCompetenceEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CvCompetenceEdit
        {
            public readonly string id = "id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_CvCompetenceView s_params_CvCompetenceView = new ActionParamsClass_CvCompetenceView();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CvCompetenceView CvCompetenceViewParams { get { return s_params_CvCompetenceView; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CvCompetenceView
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string CvCompetenceEdit = "CvCompetenceEdit";
                public readonly string CvCompetenceList = "CvCompetenceList";
                public readonly string CvCompetenceListAjax = "CvCompetenceListAjax";
            }
            public readonly string CvCompetenceEdit = "~/Views/Admin/CvCompetenceEdit.cshtml";
            public readonly string CvCompetenceList = "~/Views/Admin/CvCompetenceList.cshtml";
            public readonly string CvCompetenceListAjax = "~/Views/Admin/CvCompetenceListAjax.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AdminController : Citus.Education.WebApp.Sample.Web.Controllers.AdminController
    {
        public T4MVC_AdminController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CvCompetenceListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CvCompetenceList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CvCompetenceList);
            CvCompetenceListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CvCompetenceListAjaxOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CvCompetenceListAjax()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CvCompetenceListAjax);
            CvCompetenceListAjaxOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetCvCompetenceListAjaxOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Citus.Education.WebApp.Sample.Web.Models.DataTablesRequestModel model);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCvCompetenceListAjax(Citus.Education.WebApp.Sample.Web.Models.DataTablesRequestModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCvCompetenceListAjax);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            GetCvCompetenceListAjaxOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void CvCompetenceEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult CvCompetenceEdit(int? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CvCompetenceEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CvCompetenceEditOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CvCompetenceEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Citus.Education.WebApp.Sample.Models.ViewModels.CvCompetenceEditViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult CvCompetenceEdit(Citus.Education.WebApp.Sample.Models.ViewModels.CvCompetenceEditViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CvCompetenceEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CvCompetenceEditOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void CvCompetenceViewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult CvCompetenceView(int? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CvCompetenceView);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CvCompetenceViewOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
