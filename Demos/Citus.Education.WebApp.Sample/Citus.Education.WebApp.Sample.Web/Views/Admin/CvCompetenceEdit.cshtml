@model Citus.Education.WebApp.Sample.Models.ViewModels.CvCompetenceEditViewModel
@using ResX = Citus.Education.WebApp.Sample.Web.Views.Admin.App_LocalResources.CvCompetenceEdit;

@{
    ViewBag.Title = "Edit";
}

<h2>@ResX.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>
            @Html.ValueFor(model => model.Message)
        </h4>
        <br />
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.PersonId)
        @Html.HiddenFor(model => model.IsNew)

        @for (var i = 0; i < Model.Groups.Count(); i++)
        {
            @Html.HiddenFor(m => m.Groups[i].Id)
            @Html.HiddenFor(m => m.Groups[i].Name)
        }
        
        @for (var i = 0; i < Model.Rates.Count(); i++)
        {
            @Html.HiddenFor(m => m.Rates[i].Id)
            @Html.HiddenFor(m => m.Rates[i].Name)
        }




        @Model.Id
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Groups, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.GroupId, new { htmlAttributes = new { @class = "form-control" } })*@
                @foreach (var group in Model.Groups)
                {
                    @*@Html.Hidden("Groups.GroupId", group.Id);
                    @Html.Hidden("Groups.Name", group.Name);*@
                    @Html.RadioButtonFor(model => model.GroupId, group.Id)  @group.Name
                    <br />
                }
                @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rates, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var rate in Model.Rates)
                {
                    @Html.RadioButtonFor(model => model.RateId, rate.Id)  @rate.Name
                    <br />
                }
                @Html.ValidationMessageFor(model => model.RateId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
