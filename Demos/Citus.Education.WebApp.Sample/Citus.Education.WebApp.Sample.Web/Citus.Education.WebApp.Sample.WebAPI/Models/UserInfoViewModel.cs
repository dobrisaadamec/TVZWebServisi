// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace Citus.Education.WebApp.Sample.Web.WebAPIClient.Models
{
    public partial class UserInfoViewModel
    {
        private string _email;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Email
        {
            get { return this._email; }
            set { this._email = value; }
        }
        
        private bool? _hasRegistered;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? HasRegistered
        {
            get { return this._hasRegistered; }
            set { this._hasRegistered = value; }
        }
        
        private string _loginProvider;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string LoginProvider
        {
            get { return this._loginProvider; }
            set { this._loginProvider = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the UserInfoViewModel class.
        /// </summary>
        public UserInfoViewModel()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken emailValue = inputObject["Email"];
                if (emailValue != null && emailValue.Type != JTokenType.Null)
                {
                    this.Email = ((string)emailValue);
                }
                JToken hasRegisteredValue = inputObject["HasRegistered"];
                if (hasRegisteredValue != null && hasRegisteredValue.Type != JTokenType.Null)
                {
                    this.HasRegistered = ((bool)hasRegisteredValue);
                }
                JToken loginProviderValue = inputObject["LoginProvider"];
                if (loginProviderValue != null && loginProviderValue.Type != JTokenType.Null)
                {
                    this.LoginProvider = ((string)loginProviderValue);
                }
            }
        }
    }
}
