// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Citus.Education.WebApp.Sample.Web.WebAPIClient.Models;
using Microsoft.Rest;

namespace Citus.Education.WebApp.Sample.Web.WebAPIClient
{
    public partial interface IAccount
    {
        /// <param name='model'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<string>> AddExternalLoginWithOperationResponseAsync(AddExternalLoginBindingModel model, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='model'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<string>> ChangePasswordWithOperationResponseAsync(ChangePasswordBindingModel model, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='provider'>
        /// Required.
        /// </param>
        /// <param name='error'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<string>> GetExternalLoginWithOperationResponseAsync(string provider, string error = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='returnUrl'>
        /// Required.
        /// </param>
        /// <param name='generateState'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<ExternalLoginViewModel>>> GetExternalLoginsWithOperationResponseAsync(string returnUrl, bool? generateState = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='returnUrl'>
        /// Required.
        /// </param>
        /// <param name='generateState'>
        /// Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<ManageInfoViewModel>> GetManageInfoWithOperationResponseAsync(string returnUrl, bool? generateState = null, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<UserInfoViewModel>> GetUserInfoWithOperationResponseAsync(CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<string>> LogoutWithOperationResponseAsync(CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='model'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<string>> RegisterWithOperationResponseAsync(RegisterBindingModel model, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='model'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<string>> RegisterExternalWithOperationResponseAsync(RegisterExternalBindingModel model, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='model'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<string>> RemoveLoginWithOperationResponseAsync(RemoveLoginBindingModel model, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='model'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<string>> SetPasswordWithOperationResponseAsync(SetPasswordBindingModel model, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
